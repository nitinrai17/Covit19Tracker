{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Nitin\\\\covid19tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Nitin\\\\covid19tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Nitin\\\\covid19tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{fetchDailyData}from'../../api';import{Line,Bar}from'react-chartjs-2';import styles from'./Chart.module.css';var Charts=function Charts(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();//console.log(dailyData);\nfetchAPI();},[]);//console.log(confirmed, recovered, deaths);\nvar lineChart=dailyData.length!==0?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgba(255,0,0,0.5)',fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:'People',backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current State in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Charts;","map":{"version":3,"sources":["D:/Nitin/covid19tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":"4bAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAsD,oBAApDC,IAAoD,CAA5CC,SAA4C,WAA5CA,SAA4C,CAAjCC,SAAiC,WAAjCA,SAAiC,CAAtBC,MAAsB,WAAtBA,MAAsB,CAAZC,OAAY,MAAZA,OAAY,eAEnCX,QAAQ,CAAC,EAAD,CAF2B,wCAE7DY,SAF6D,eAElDC,YAFkD,eAIpEZ,SAAS,CAAC,UAAK,CACd,GAAMa,CAAAA,QAAQ,2FAAG,+IAChBD,YADgB,uBACIX,CAAAA,cAAc,EADlB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAIA;AACAA,QAAQ,GACR,CAPQ,CAOP,EAPO,CAAT,CASA;AAEA,GAAMC,CAAAA,SAAS,CACbH,SAAS,CAACI,MAAV,GAAqB,CAAtB,cACC,oBAAC,IAAD,EACA,IAAI,CAAG,CACNC,MAAM,CAAGL,SAAS,CAACM,GAAV,CAAc,mBAAEC,CAAAA,IAAF,OAAEA,IAAF,OAAYA,CAAAA,IAAZ,EAAd,CADH,CAENC,QAAQ,CAAE,CAAC,CACVb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGV,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAnB,EAAd,CADI,CAEVa,KAAK,CAAE,UAFG,CAGVC,WAAW,CAAE,SAHH,CAIVC,IAAI,CAAE,IAJI,CAAD,CAKN,CACHhB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGR,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EAAd,CADH,CAEHW,KAAK,CAAE,QAFJ,CAGHC,WAAW,CAAE,KAHV,CAIHE,eAAe,CAAE,mBAJd,CAKHD,IAAI,CAAE,IALH,CALM,CAFJ,CADP,EADD,CAmBM,IApBP,CAwBA,GAAME,CAAAA,QAAQ,CACbjB,SAAS,cAER,oBAAC,GAAD,EACC,IAAI,CAAE,CACLS,MAAM,CAAE,CAAC,UAAD,CAAc,WAAd,CAA4B,QAA5B,CADH,CAELG,QAAQ,CAAE,CAAC,CACVC,KAAK,CAAG,QADE,CAEVG,eAAe,CAAE,CAAC,mBAAD,CAAsB,mBAAtB,CAA2C,mBAA3C,CAFP,CAGVjB,IAAI,CAAE,CAAEC,SAAS,CAACkB,KAAZ,CAAmBjB,SAAS,CAACiB,KAA7B,CAAqChB,MAAM,CAACgB,KAA5C,CAHI,CAAD,CAFL,CADP,CASC,OAAO,CAAE,CACRC,MAAM,CAAE,CAACC,OAAO,CAAE,KAAV,CADA,CAERC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAkBE,IAAI,4BAAsBnB,OAAtB,CAAtB,CAFC,CATV,EAFQ,CAgBN,IAjBJ,CAqBA,mBACC,2BAAK,SAAS,CAAEN,MAAM,CAAC0B,SAAvB,EACEpB,OAAO,CAAGc,QAAH,CAAaV,SADtB,CADD,CAMA,CAlED,CAoEA,cAAeT,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'; \r\n\r\nconst Charts = ({data : {confirmed, recovered, deaths} , country}) =>{\r\n\t\r\n\tconst [dailyData, setDailyData]= useState([]); \r\n\t\r\n\tuseEffect(() =>{\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData( await fetchDailyData());\r\n\t\t}\r\n\t\t\r\n\t\t//console.log(dailyData);\r\n\t\tfetchAPI();\r\n\t},[]);\r\n\t\r\n\t//console.log(confirmed, recovered, deaths);\r\n\t\r\n\tconst lineChart = (\r\n\t\t(dailyData.length !== 0) ? \r\n\t\t(<Line \r\n\t\t\tdata ={{\r\n\t\t\t\tlabels:  dailyData.map(({date }) =>date ),\r\n\t\t\t\tdatasets: [{\r\n\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed ), \r\n\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\tfill: true,\r\n\t\t\t\t} , {\r\n\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths ), \r\n\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)', \r\n\t\t\t\t\tfill: true,\r\n\t\t\t\t\t\r\n\t\t\t\t}],\r\n\t\t\t\t\r\n\t\t\t}}\r\n\t\t/>) : null\r\n\t\r\n\t);\r\n\t\r\n\tconst barChart = (\r\n\t\tconfirmed \r\n\t\t? (\r\n\t\t\t<Bar \r\n\t\t\t\tdata={{\r\n\t\t\t\t\tlabels: ['Infected' , 'Recovered' , 'Deaths'],\r\n\t\t\t\t\tdatasets: [{\r\n\t\t\t\t\t\tlabel:  'People',\r\n\t\t\t\t\t\tbackgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\r\n\t\t\t\t\t\tdata: [ confirmed.value, recovered.value , deaths.value]\r\n\t\t\t\t\t}] \r\n\t\t\t\t}}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\tlegend: {display: false },\r\n\t\t\t\t\ttitle: { display: true , text: `Current State in ${country}`}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t): null\r\n\t) \r\n\t\r\n\t\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t{country ? barChart :lineChart}\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}