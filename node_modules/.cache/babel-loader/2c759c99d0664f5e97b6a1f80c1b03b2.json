{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nitin\\\\covid19tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Charts = () => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  });\n  /*\tconst lineChart = (\r\n  \t\t(dailyData[0]) ? \r\n  \t\t(<Line \r\n  \t\t\tdata ={{\r\n  \t\t\t\tlabels: '',\r\n  \t\t\t\tdataset: [{} , {}], \r\n  \t\t\t\t\r\n  \t\t\t\t\r\n  \t\t\t}}\r\n  \t\t/>) : null\r\n  \t\r\n  \t);*/\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, \"Charts \");\n};\n\nexport default Charts;","map":{"version":3,"sources":["D:/Nitin/covid19tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","dailyData","setDailyData","fetchAPI","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAK;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA2BR,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC5BD,MAAAA,YAAY,EAAE,MAAMN,cAAc,EAAtB,EAAZ;AACA,KAFD;;AAIAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAE,IAAAA,QAAQ;AACR,GAPQ,CAAT;AASD;;;;;;;;;;;;;AAcC,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD;AAIA,CA/BD;;AAiCA,eAAeH,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'; \r\n\r\nconst Charts = () =>{\r\n\t\r\n\tconst [dailyData, setDailyData]= useState({}); \r\n\t\r\n\tuseEffect(() =>{\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData( await fetchDailyData());\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(dailyData);\r\n\t\tfetchAPI();\r\n\t});\r\n\t\r\n/*\tconst lineChart = (\r\n\t\t(dailyData[0]) ? \r\n\t\t(<Line \r\n\t\t\tdata ={{\r\n\t\t\t\tlabels: '',\r\n\t\t\t\tdataset: [{} , {}], \r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}}\r\n\t\t/>) : null\r\n\t\r\n\t);*/\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<h1>Charts </h1>\r\n\t)\r\n\r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}