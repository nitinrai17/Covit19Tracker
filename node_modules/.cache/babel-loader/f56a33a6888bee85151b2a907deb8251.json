{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api';\nconst urldaily = 'https://covid19.mathdro.id/api/daily';\nexport const fetchData = async () => {\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(url);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {}\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get('${url}/daily');\n    console.log(data);\n  } catch (error) {}\n};","map":{"version":3,"sources":["D:/Nitin/covid19tracker/src/api/index.js"],"names":["axios","url","urldaily","fetchData","data","confirmed","recovered","deaths","lastUpdate","get","error","fetchDailyData","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAC,gCAAV;AACA,MAAMC,QAAQ,GAAE,sCAAhB;AAEA,OAAO,MAAMC,SAAS,GAAG,YAAY;AACpC,MAAG;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAG;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,MAAxB;AAAgCC,QAAAA;AAAhC;AAAT,QAA0D,MAAMR,KAAK,CAACS,GAAN,CAAUR,GAAV,CAAtE;AAEA,WAAO;AAAEI,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,MAAxB;AAAgCC,MAAAA;AAAhC,KAAP;AACA,GAJD,CAIC,OAAME,KAAN,EAAY,CAEZ;AACD,CARM;AAUP,OAAO,MAAMC,cAAc,GAAG,YAAU;AACvC,MAAG;AACF,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACS,GAAN,CAAU,cAAV,CAAvB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEA,GALD,CAKC,OAAMM,KAAN,EAAY,CAEZ;AAED,CAVM","sourcesContent":["import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\nconst urldaily= 'https://covid19.mathdro.id/api/daily';\r\n\r\nexport const fetchData = async () => {\r\n\ttry{\r\n\t\tconst { data : { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\r\n\t\t\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate, };\r\n\t}catch(error){\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport const fetchDailyData = async ()=>{\r\n\ttry{\r\n\t\tconst { data } = await axios.get('${url}/daily');\r\n\t\t\r\n\t\tconsole.log(data);\r\n\t\t\r\n\t}catch(error){\r\n\t\t\r\n\t}\r\n\t\r\n}"]},"metadata":{},"sourceType":"module"}