{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","colr","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Chart","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e800bac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__gHQgW\",\"card\":\"Cards_card__10EdL\",\"infected\":\"Cards_infected__qT6MH\",\"recovered\":\"Cards_recovered__3jM5C\",\"deaths\":\"Cards_deaths__2pUJo\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core'; \r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\n\r\n\r\nconst Cards = ({data :{confirmed, recovered, deaths, lastUpdate}}) =>{\r\n\t\r\n\tif(!confirmed ){\r\n\t\treturn 'Loading ... ';\r\n\t}\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of COVID-19 </Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of Recovered cases of COVID-19 </Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of Deaths cuased by  COVID-19 </Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t\t\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\t\r\n\tlet changeableURL= url;\r\n\t\r\n\tif(country){\r\n\t\tchangeableURL = `${url}/countries/${country}`;\r\n\t}\r\n\t\r\n\ttry{\r\n\t\tconst { data : { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableURL);\r\n\t\t\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate, };\r\n\t}catch(error){\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport const fetchDailyData = async ()=>{\r\n\ttry{\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\t\t\r\n\t\tconst modifiedData = data.map(( dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\t\t//console.log(modifiedData);\r\n\t\treturn modifiedData;\r\n\t\t\r\n\t}catch(error){\r\n\t\tconsole.log(error);\r\n\t}\r\n\t\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry{\r\n\t\tconst { data : { countries }}= await axios.get(`${url}/countries`);\r\n\t\t//console.log(countries);\r\n\t\treturn countries.map((country) => country.name);\r\n\t}catch(error){\r\n\t\tconsole.log(error);\r\n\t}\t\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'; \r\n\r\nconst Charts = ({data : {confirmed, recovered, deaths} , country}) =>{\r\n\t\r\n\tconst [dailyData, setDailyData]= useState([]); \r\n\t\r\n\tuseEffect(() =>{\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData( await fetchDailyData());\r\n\t\t}\r\n\t\t\r\n\t\t//console.log(dailyData);\r\n\t\tfetchAPI();\r\n\t},[]);\r\n\t\r\n\t//console.log(confirmed, recovered, deaths);\r\n\t\r\n\tconst lineChart = (\r\n\t\t(dailyData.length !== 0) ? \r\n\t\t(<Line \r\n\t\t\tdata ={{\r\n\t\t\t\tlabels:  dailyData.map(({date }) =>date ),\r\n\t\t\t\tdatasets: [{\r\n\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed ), \r\n\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\tfill: true,\r\n\t\t\t\t} , {\r\n\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths ), \r\n\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)', \r\n\t\t\t\t\tfill: true,\r\n\t\t\t\t\t\r\n\t\t\t\t}],\r\n\t\t\t\t\r\n\t\t\t}}\r\n\t\t/>) : null\r\n\t\r\n\t);\r\n\t\r\n\tconst barChart = (\r\n\t\tconfirmed \r\n\t\t? (\r\n\t\t\t<Bar \r\n\t\t\t\tdata={{\r\n\t\t\t\t\tlabels: ['Infected' , 'Recovered' , 'Deaths'],\r\n\t\t\t\t\tdatasets: [{\r\n\t\t\t\t\t\tlabel:  'People',\r\n\t\t\t\t\t\tbackgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\r\n\t\t\t\t\t\tdata: [ confirmed.value, recovered.value , deaths.value]\r\n\t\t\t\t\t}] \r\n\t\t\t\t}}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\tlegend: {display: false },\r\n\t\t\t\t\ttitle: { display: true , text: `Current State in ${country}`}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t): null\r\n\t) \r\n\t\r\n\t\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t{country ? barChart :lineChart}\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Charts;","import React , { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n\t\r\n\tconst [countries, setCountries] = useState([]);\r\n\t\r\n\t\r\n\tuseEffect (() => {\r\n\t\tconst fetchAPI = async () =>{\r\n\t\t\tsetCountries(await fetchCountries());\r\n\t\t};\r\n\t\t\r\n\t\tfetchAPI();\r\n\t\t\r\n\t},[]);\r\n\t\r\n\t//console.log(countries);\r\n\t\r\n\treturn (\r\n\t\t//(fetchedCountries.length)?\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{countries.map((country, i) => <option key= {i} value={country}>{country}</option>)}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t)\r\n\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\n\r\nclass App extends React.Component {\r\n\t\r\n\tstate = {\r\n\t\t data : {},\r\n\t\t country: '',\r\n\t\t \r\n\t}\r\n\t\r\n\t\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\t\tthis.setState({data : fetchedData });\r\n\t\t//console.log(fetchedData);\r\n\t}\r\n\t\r\n\thandleCountryChange = async (country) => {\r\n\t\t//console.log(country);\r\n\t\tconst fetchedData = await fetchData(country);\r\n\t\t//console.log(fetchedData);\r\n\t\t\r\n\t\tthis.setState({data : fetchedData , country:country});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\tconst {data , country} = this.state;\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange}/> \r\n\t\t\t\t<Chart data={data} country={country}/>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t)\r\n\t}\r\n\t\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';  \t \t\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__19c1R\",\"image\":\"App_image__p8rgL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2-TiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2Z390\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}